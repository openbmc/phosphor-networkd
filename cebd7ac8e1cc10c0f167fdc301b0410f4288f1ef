{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "a0e67e41_0f13ffc1",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1000278
      },
      "writtenOn": "2024-04-03T18:15:26Z",
      "side": 1,
      "message": "Changed the cmd.ncsi_cmd to cmd.operation, per the review comment.\nNo other change.",
      "revId": "cebd7ac8e1cc10c0f167fdc301b0410f4288f1ef",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "942caf61_b822b376",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1000278
      },
      "writtenOn": "2024-04-04T14:08:17Z",
      "side": 1,
      "message": "Ravi,\nThanks for the comments.",
      "revId": "cebd7ac8e1cc10c0f167fdc301b0410f4288f1ef",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "1144ac1a_c5a291f3",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1000278
      },
      "writtenOn": "2024-04-30T14:20:40Z",
      "side": 1,
      "message": "Updated the commit per latest comments.",
      "revId": "cebd7ac8e1cc10c0f167fdc301b0410f4288f1ef",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "73980a74_333b88e5",
        "filename": "src/argument.cpp",
        "patchSetId": 2
      },
      "lineNbr": 71,
      "author": {
        "id": 1000350
      },
      "writtenOn": "2024-04-04T09:42:28Z",
      "side": 1,
      "message": "why to turn off clang-format??\nits always suggested to follow clang-formats",
      "revId": "cebd7ac8e1cc10c0f167fdc301b0410f4288f1ef",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "96ff5dca_dfefcf61",
        "filename": "src/argument.cpp",
        "patchSetId": 2
      },
      "lineNbr": 71,
      "author": {
        "id": 1000278
      },
      "writtenOn": "2024-04-04T14:08:17Z",
      "side": 1,
      "message": "It is difficult to see the format of the help text when it is wrapped into weird chunks by an auto formatting tool.\nYes, it is always *suggested* to leave it on.\nIt is not *mandated* to always leave it on.\n\nLine 74 and 76 in the left pane are examples of what I\u0027m trying to avoid.\nIn my opinion I have a valid use case for blocking the formatting.",
      "parentUuid": "73980a74_333b88e5",
      "revId": "cebd7ac8e1cc10c0f167fdc301b0410f4288f1ef",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d6e385a7_244b46b0",
        "filename": "src/argument.cpp",
        "patchSetId": 2
      },
      "lineNbr": 71,
      "author": {
        "id": 1000163
      },
      "writtenOn": "2024-04-29T21:32:54Z",
      "side": 1,
      "message": "I don\u0027t mind the clang-format off thing, but if you want to work around it, you might consider just printing one long string:\n\nstd::cerr \u003c\u003c\n    \"    --help | -h ...\\n\"\n    \"...\\n\"\n    \"....a very long line \"\n    \"split into two\\n\"\n    \"\\n\";",
      "parentUuid": "96ff5dca_dfefcf61",
      "revId": "cebd7ac8e1cc10c0f167fdc301b0410f4288f1ef",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9a4667db_2b1ec5fa",
        "filename": "src/argument.cpp",
        "patchSetId": 2
      },
      "lineNbr": 71,
      "author": {
        "id": 1000278
      },
      "writtenOn": "2024-04-30T14:20:40Z",
      "side": 1,
      "message": "I chose to use the long line method instead.\nIt gets rid of the repeated std::cerr boilerplate.\nIt prevents having to fight over appropriateness of disabling clang formatting.\n\nI removed the explicit std::flush because each of the \"\\n\" chars performs a flush action anyway.",
      "parentUuid": "d6e385a7_244b46b0",
      "revId": "cebd7ac8e1cc10c0f167fdc301b0410f4288f1ef",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "48a438de_d1205a3a",
        "filename": "src/ncsi_util.cpp",
        "patchSetId": 2
      },
      "lineNbr": 41,
      "author": {
        "id": 1000350
      },
      "writtenOn": "2024-04-04T09:42:28Z",
      "side": 1,
      "message": "add check for nullptr?",
      "revId": "cebd7ac8e1cc10c0f167fdc301b0410f4288f1ef",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "93c98008_4b41c21d",
        "filename": "src/ncsi_util.cpp",
        "patchSetId": 2
      },
      "lineNbr": 41,
      "author": {
        "id": 1000278
      },
      "writtenOn": "2024-04-04T14:08:17Z",
      "side": 1,
      "message": "Can you clarify?\nThe incoming string is not empty.\noit is initialized with a number of bytes to hold the incoming decode.\noit is filled with data by the for loop.\nI don\u0027t understand why I\u0027d do a nullptr check after the pointer has already been used.\nI can see value in making sure the \u00270\u0027 doesn\u0027t go past the end of the StrBuf.\nIn that instance line 33 needs to be changed to stop shriking the StrBuf one byte.",
      "parentUuid": "48a438de_d1205a3a",
      "revId": "cebd7ac8e1cc10c0f167fdc301b0410f4288f1ef",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a1c492f1_1b2d0628",
        "filename": "src/ncsi_util.cpp",
        "patchSetId": 2
      },
      "lineNbr": 41,
      "author": {
        "id": 1000163
      },
      "writtenOn": "2024-04-29T21:30:07Z",
      "side": 1,
      "message": "Yeah, the -1 on line 33 should be removed. While strbuf normally does have more capacity than the current length, there is no guarantee, so this extra write could cause an out of bounds write.",
      "parentUuid": "93c98008_4b41c21d",
      "revId": "cebd7ac8e1cc10c0f167fdc301b0410f4288f1ef",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e0b08ac4_a7638962",
        "filename": "src/ncsi_util.cpp",
        "patchSetId": 2
      },
      "lineNbr": 41,
      "author": {
        "id": 1000278
      },
      "writtenOn": "2024-04-30T14:20:40Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "a1c492f1_1b2d0628",
      "revId": "cebd7ac8e1cc10c0f167fdc301b0410f4288f1ef",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}