{
  "comments": [
    {
      "key": {
        "uuid": "80bacf83_8d33fb20",
        "filename": "src/ethernet_interface.cpp",
        "patchSetId": 1
      },
      "lineNbr": 610,
      "author": {
        "id": 1000188
      },
      "writtenOn": "2021-10-27T05:31:52Z",
      "side": 0,
      "message": "BTW you should keep the ioctl call, you can get all 3 states from this if we were to change it\nIFF_UP / IFF_RUNNING flags convey all the info.",
      "revId": "4717d93bb1863ecc042ca0fc301395a2f06b96ec",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "94babf87_c0a59775",
        "filename": "src/ethernet_interface.cpp",
        "patchSetId": 1
      },
      "lineNbr": 610,
      "author": {
        "id": 1000278
      },
      "writtenOn": "2021-11-08T17:08:02Z",
      "side": 0,
      "message": "My experience with the NCSI link is that the ioctl does not report the correct state. When you physically remove the cable from the NCSI channel the ioctl continues to report the IFF_UP, because the BMC MII link is always \"up\". \n\nWhen I investigated this I could not identify a method for determining what the actual state of the link was for the non-NCSI side of the NIC.\nThe ioctl works fine for our BMC dedicated NIC, which is not NCSI.",
      "parentUuid": "80bacf83_8d33fb20",
      "revId": "4717d93bb1863ecc042ca0fc301395a2f06b96ec",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8569e916_0b58a2c0",
        "filename": "src/ethernet_interface.cpp",
        "patchSetId": 1
      },
      "lineNbr": 610,
      "author": {
        "id": 1000188
      },
      "writtenOn": "2021-11-10T11:31:01Z",
      "side": 0,
      "message": "But /sys/class/net/{if}/carrier is hooked up to your NCSI stack and not one of the ioctl values? There must be an ioctl method for querying the same info... or maybe rtnetlink.",
      "parentUuid": "94babf87_c0a59775",
      "revId": "4717d93bb1863ecc042ca0fc301395a2f06b96ec",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3ad5d572_b2717fc0",
        "filename": "src/ethernet_interface.cpp",
        "patchSetId": 1
      },
      "lineNbr": 610,
      "author": {
        "id": 1001244
      },
      "writtenOn": "2021-11-17T04:41:07Z",
      "side": 0,
      "message": "My observation was also, the ioctl was not giving correct status, when cable was removed for both dedicated and shared NIC (aka NC-SI). I will update here, which flags will be reported by ioctl when NIC cable is removed.",
      "parentUuid": "8569e916_0b58a2c0",
      "revId": "4717d93bb1863ecc042ca0fc301395a2f06b96ec",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2c636b03_5ab3725d",
        "filename": "src/ethernet_interface.cpp",
        "patchSetId": 1
      },
      "lineNbr": 610,
      "author": {
        "id": 1001244
      },
      "writtenOn": "2021-11-24T13:10:04Z",
      "side": 0,
      "message": "Yes, @William A. Kennington III : Using IFF_UP / IFF_RUNNING we can get the link status. I have fixed this issue.\n\n@Johnathan Mantey : You are right. On NCSI port when the ethernet cable is removed CARRIER is still available. So the code will report administrative status for NCSI port even though when the cable is removed.",
      "parentUuid": "3ad5d572_b2717fc0",
      "revId": "4717d93bb1863ecc042ca0fc301395a2f06b96ec",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    }
  ]
}