{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "aef56dcc_f221166c",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1000278
      },
      "writtenOn": "2023-04-18T22:01:19Z",
      "side": 1,
      "message": "Providing some feedback.",
      "revId": "5469e03e919670a529fcce3fd67c72a2164e9e10",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "67795587_5314e528",
        "filename": "src/ncsi_netlink_main.cpp",
        "patchSetId": 2
      },
      "lineNbr": 19,
      "author": {
        "id": 1000278
      },
      "writtenOn": "2023-04-18T22:01:19Z",
      "side": 1,
      "message": "What is this?\nIs this a library that we want to pull into phosphor-network?",
      "revId": "5469e03e919670a529fcce3fd67c72a2164e9e10",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2769c670_5292bfec",
        "filename": "src/ncsi_netlink_main.cpp",
        "patchSetId": 2
      },
      "lineNbr": 19,
      "author": {
        "id": 1001758
      },
      "writtenOn": "2023-04-18T23:08:47Z",
      "side": 1,
      "message": "I have dropped this inclusion in my latest change.\n\nThis is formatting lib https://fmt.dev/latest/api.html",
      "parentUuid": "67795587_5314e528",
      "revId": "5469e03e919670a529fcce3fd67c72a2164e9e10",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d8313d68_07997d4c",
        "filename": "src/ncsi_netlink_main.cpp",
        "patchSetId": 2
      },
      "lineNbr": 27,
      "author": {
        "id": 1000278
      },
      "writtenOn": "2023-04-18T22:01:19Z",
      "side": 1,
      "message": "Make this explicit.\nI\u0027m not in favor of seeing this kind of obfuscation.",
      "revId": "5469e03e919670a529fcce3fd67c72a2164e9e10",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d61d9041_bd09a6ef",
        "filename": "src/ncsi_netlink_main.cpp",
        "patchSetId": 2
      },
      "lineNbr": 27,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2023-04-18T23:38:42Z",
      "side": 1,
      "message": "Can you elaborate what you want?  This macro is provided by LG2 headers. I’m not really sure what you are asking for.",
      "parentUuid": "d8313d68_07997d4c",
      "revId": "5469e03e919670a529fcce3fd67c72a2164e9e10",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "81d12b76_73487342",
        "filename": "src/ncsi_netlink_main.cpp",
        "patchSetId": 2
      },
      "lineNbr": 27,
      "author": {
        "id": 1000278
      },
      "writtenOn": "2023-04-19T14:01:24Z",
      "side": 1,
      "message": "Patrick,\nI\u0027m not wholly familiar with lg2, so I don\u0027t know what this does. I went looking for this macro in other repos that use lg2, and did not find it in use. The C macro style is jarring in a C++ based project. \nIs this macro necessary?\nIs the C preprocessor really the only way to implement the feature?\nIt\u0027s unclear, as someone who doesn\u0027t use lg2, what this macro does.\nIs there a way to eliminate the opacity of the macro?\nDoes the inclusion inside a local scope prevent the behavior from bleeding into the global scope?\nIf I\u0027m asking these questions, who else is asking these questions upon reading the source?\nSo is there a way to make this more obvious what \"USING_WITH_FLAGS\" is/does/means?",
      "parentUuid": "d61d9041_bd09a6ef",
      "revId": "5469e03e919670a529fcce3fd67c72a2164e9e10",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a2f774fe_6d7241c1",
        "filename": "src/ncsi_netlink_main.cpp",
        "patchSetId": 2
      },
      "lineNbr": 27,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2023-04-19T14:48:41Z",
      "side": 1,
      "message": "There is PHOSPHOR_LOG2_USING and PHOSPHOR_LOG2_USING_WITH_FLAGS.\n\nhttps://github.com/search?q\u003dorg%3Aopenbmc+phosphor_log2_using\u0026type\u003dcode\n\n\u003e Is the C preprocessor really the only way to implement the feature?\n\nNo, certainly not.  It use to be pretty common for people to have `using phosphor::logging` sprinkled in their code.  This macro is a replacement for a global `using lg2` which may add more to your namespace than you want.\n\nYou can either use the `using`, use the macro, or prepend `lg2` to all the statements.  Any of those are fine approaches... but I\u0027d generally stay away from the `using` on its own because the lg2 API makes no attempt to not conflict with `std` (in order to keep the API generally succinct).  There is for example `lg2::hex` which conflicts with `std::hex`.\n\n\u003e Does the inclusion inside a local scope prevent the behavior from bleeding into the global scope?\n\nYes.  Both macros are just smaller `using` sets than a full `using lg2`.\n\n\u003e So is there a way to make this more obvious what \"USING_WITH_FLAGS\" is/does/means?\n\nDo you have any suggestions here?  Maybe it could be better documented in the phosphor-logging/docs/structured-logging.md?\n\n@Jagpal - Do you actually want the `_WITH_FLAGS` here or is the plain `PHOSPHOR_LOG2_USING` sufficient.",
      "parentUuid": "81d12b76_73487342",
      "revId": "5469e03e919670a529fcce3fd67c72a2164e9e10",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "06a7ea31_57a2fd96",
        "filename": "src/ncsi_netlink_main.cpp",
        "patchSetId": 2
      },
      "lineNbr": 27,
      "author": {
        "id": 1000278
      },
      "writtenOn": "2023-04-19T15:40:07Z",
      "side": 1,
      "message": "\u003e There is PHOSPHOR_LOG2_USING and PHOSPHOR_LOG2_USING_WITH_FLAGS.\n\u003e \n\u003e https://github.com/search?q\u003dorg%3Aopenbmc+phosphor_log2_using\u0026type\u003dcode\n\nThanks for the reference.\n\n\u003e \n\u003e \u003e Is the C preprocessor really the only way to implement the feature?\n\u003e \n\u003e No, certainly not.  It use to be pretty common for people to have `using phosphor::logging` sprinkled in their code.  This macro is a replacement for a global `using lg2` which may add more to your namespace than you want.\n\u003e \n\u003e You can either use the `using`, use the macro, or prepend `lg2` to all the statements.  Any of those are fine approaches... but I\u0027d generally stay away from the `using` on its own because the lg2 API makes no attempt to not conflict with `std` (in order to keep the API generally succinct).  There is for example `lg2::hex` which conflicts with `std::hex`.\n\nI guess this means my comment \"make explicit\" effectively means don\u0027t use the macro, and express what you really want. If you want to use lg2::bin, or lg2::dec, then don\u0027t leave the reader to try and figure out why lg2::info() isn\u0027t doing std::dec or std::bin.\n\n\u003e \n\u003e \u003e Does the inclusion inside a local scope prevent the behavior from bleeding into the global scope?\n\u003e \n\u003e Yes.  Both macros are just smaller `using` sets than a full `using lg2`.\n\u003e \n\u003e \u003e So is there a way to make this more obvious what \"USING_WITH_FLAGS\" is/does/means?\n\u003e \n\u003e Do you have any suggestions here?  Maybe it could be better documented in the phosphor-logging/docs/structured-logging.md?\n\nI\u0027m sure my (unpopular opinion) is don\u0027t use the macros, and express the intent directly in the code. I don\u0027t want to be surprised that std::bin isn\u0027t in use when something like \" \u003c\u003c bin \u003c\u003c binaryValue; \" is written.\n\n\u003e \n\u003e @Jagpal - Do you actually want the `_WITH_FLAGS` here or is the plain `PHOSPHOR_LOG2_USING` sufficient.",
      "parentUuid": "a2f774fe_6d7241c1",
      "revId": "5469e03e919670a529fcce3fd67c72a2164e9e10",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9fb5ade1_579d5ce9",
        "filename": "src/ncsi_netlink_main.cpp",
        "patchSetId": 2
      },
      "lineNbr": 27,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2023-04-19T16:16:52Z",
      "side": 1,
      "message": "Thank you for clarifying. \n\nI’m not a maintainer on this repository so I don’t really care which approach is taken. I gave the tools in the API to let developers decide which approach they prefer.",
      "parentUuid": "06a7ea31_57a2fd96",
      "revId": "5469e03e919670a529fcce3fd67c72a2164e9e10",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a996df1c_1093da65",
        "filename": "src/ncsi_netlink_main.cpp",
        "patchSetId": 2
      },
      "lineNbr": 27,
      "author": {
        "id": 1001758
      },
      "writtenOn": "2023-04-19T23:00:02Z",
      "side": 1,
      "message": "Changed to lg2::\u003clevel\u003e format and dropped the use of PHOSPHOR_LOG2_USING_WITH_FLAGS macro.",
      "parentUuid": "9fb5ade1_579d5ce9",
      "revId": "5469e03e919670a529fcce3fd67c72a2164e9e10",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "250ef9ff_16f4a53d",
        "filename": "src/ncsi_util.cpp",
        "patchSetId": 2
      },
      "lineNbr": 21,
      "author": {
        "id": 1000278
      },
      "writtenOn": "2023-04-18T22:01:19Z",
      "side": 1,
      "message": "See previous comment.\nDo not obfuscate this.",
      "revId": "5469e03e919670a529fcce3fd67c72a2164e9e10",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "592cebcd_98f4585c",
        "filename": "src/ncsi_util.cpp",
        "patchSetId": 2
      },
      "lineNbr": 21,
      "author": {
        "id": 1001758
      },
      "writtenOn": "2023-04-19T23:00:25Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "250ef9ff_16f4a53d",
      "revId": "5469e03e919670a529fcce3fd67c72a2164e9e10",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}