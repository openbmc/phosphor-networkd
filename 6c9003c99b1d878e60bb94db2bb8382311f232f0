{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "60b956a3_b03331a2",
        "filename": "/COMMIT_MSG",
        "patchSetId": 19
      },
      "lineNbr": 32,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2024-08-20T15:39:44Z",
      "side": 1,
      "message": "nit: this still doesn\u0027t match your name in the CLA.",
      "range": {
        "startLine": 32,
        "startChar": 23,
        "endLine": 32,
        "endChar": 25
      },
      "revId": "6c9003c99b1d878e60bb94db2bb8382311f232f0",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "674ed73f_780af088",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 19
      },
      "lineNbr": 0,
      "author": {
        "id": 1002149
      },
      "writtenOn": "2024-08-05T05:01:08Z",
      "side": 1,
      "message": "Hi John, \nAs suggested reduced vertical space using terinay operator and resolved other comments.Kindly review. Thanks",
      "revId": "6c9003c99b1d878e60bb94db2bb8382311f232f0",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ffd2ab16_8f99fbf7",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 19
      },
      "lineNbr": 0,
      "author": {
        "id": 1000278
      },
      "writtenOn": "2024-08-05T13:49:22Z",
      "side": 1,
      "message": "Thank you for making the requested changes.\nI\u0027m going to allow others to supply comments now.\nYou will need one more +1 before a maintainer will take a look at the code.\nHave someone on your team review, and provide feedback.\nI could add some comments myself, but I don\u0027t want to bikeshed this commit.",
      "revId": "6c9003c99b1d878e60bb94db2bb8382311f232f0",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d33860a7_f55c9e01",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 19
      },
      "lineNbr": 0,
      "author": {
        "id": 1002111
      },
      "writtenOn": "2024-08-05T18:11:54Z",
      "side": 1,
      "message": "Looks good",
      "revId": "6c9003c99b1d878e60bb94db2bb8382311f232f0",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "9c659828_48640bc6",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 19
      },
      "lineNbr": 0,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2024-08-20T15:39:44Z",
      "side": 1,
      "message": "Adding AndrewJ for best practices on struct unpacking.  It seems like this union approach is quite unsafe.",
      "revId": "6c9003c99b1d878e60bb94db2bb8382311f232f0",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "477dbe3f_1fe84508",
        "filename": "src/ncsi_util.cpp",
        "patchSetId": 19
      },
      "lineNbr": 106,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2024-08-20T15:39:44Z",
      "side": 1,
      "message": "Are we really cool with doing this?  This seems very compiler and architecture specific.  I\u0027m pretty sure that little endian vs big endian lays out the structure in completely the opposite way.",
      "range": {
        "startLine": 80,
        "startChar": 0,
        "endLine": 106,
        "endChar": 2
      },
      "revId": "6c9003c99b1d878e60bb94db2bb8382311f232f0",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0a2a59c3_bb50e072",
        "filename": "src/ncsi_util.cpp",
        "patchSetId": 19
      },
      "lineNbr": 106,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2024-08-21T01:31:54Z",
      "side": 1,
      "message": "This really should be avoided. Extraction of fields is best done using a shift-and-mask approach.\n\nFrom `11.4.9 Bit-fields` (`[class.bit]`) in N4860 ([C++20 draft standard](https://wg21.link/std20)):\n\n\u003e Allocation of bit-fields within a class object is implementation-defined. Alignment of bit-fields is implementation-defined. Bit-fields are packed into some addressable allocation\nunit. [Note: Bit-fields straddle allocation units on some machines and not on others. Bit-fields are assigned right-to-left on some machines, left-to-right on others. â€” end note]\n\nThey\u0027re not portable and a whole bunch of pain. I really recommend avoiding them (they also have a whole bunch of concurrency problems, but that might not be a concern here).",
      "parentUuid": "477dbe3f_1fe84508",
      "range": {
        "startLine": 80,
        "startChar": 0,
        "endLine": 106,
        "endChar": 2
      },
      "revId": "6c9003c99b1d878e60bb94db2bb8382311f232f0",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}