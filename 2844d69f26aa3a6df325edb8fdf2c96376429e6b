{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "bfb91d26_122c5f9f",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 7
      },
      "lineNbr": 0,
      "author": {
        "id": 1000022
      },
      "writtenOn": "2022-04-05T02:18:43Z",
      "side": 1,
      "message": "I am good with the changes, Let william also take a look.",
      "revId": "2844d69f26aa3a6df325edb8fdf2c96376429e6b",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "136513ad_50ea9297",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 7
      },
      "lineNbr": 0,
      "author": {
        "id": 1000022
      },
      "writtenOn": "2022-04-06T09:43:27Z",
      "side": 1,
      "message": "Jonathan, You need to merge this with the following.\nhttps://gerrit.openbmc-project.xyz/c/openbmc/phosphor-host-ipmid/+/50987\nhttps://gerrit.openbmc-project.xyz/c/openbmc/bmcweb/+/509",
      "revId": "2844d69f26aa3a6df325edb8fdf2c96376429e6b",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "9ce49698_69cc3b89",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 7
      },
      "lineNbr": 0,
      "author": {
        "id": 1000278
      },
      "writtenOn": "2022-04-06T14:57:04Z",
      "side": 1,
      "message": "This can, and needs to, precede the BMCWeb and the IPMI commits.\nThe existing BMCWeb and IPMI code will still function correctly with this change in place.\nThe IPMI commit will be approved shortly after I merge this.\n",
      "revId": "2844d69f26aa3a6df325edb8fdf2c96376429e6b",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3689c326_3c6356c1",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 7
      },
      "lineNbr": 0,
      "author": {
        "id": 1000188
      },
      "writtenOn": "2022-04-06T16:36:29Z",
      "side": 1,
      "message": "I\u0027m still not okay with this for the comment I left before. We have use cases where we use DHCP\u003dfalse and IPv6AcceptRA\u003dtrue managed by phosphor-netowrkd, so this change can\u0027t work for us.\n\nI don\u0027t see why we can\u0027t fix this in IPMI and redfish layers to smooth out any issues an end user would run into. We should be able to just set both properties when changing the DHCPv6 state.",
      "parentUuid": "bfb91d26_122c5f9f",
      "revId": "2844d69f26aa3a6df325edb8fdf2c96376429e6b",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "da5e8a86_0640a74c",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 7
      },
      "lineNbr": 0,
      "author": {
        "id": 1000022
      },
      "writtenOn": "2022-04-07T08:20:18Z",
      "side": 1,
      "message": "@william: what are those use cases? \n          stateless DHCP????",
      "parentUuid": "3689c326_3c6356c1",
      "revId": "2844d69f26aa3a6df325edb8fdf2c96376429e6b",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "250bb07b_20ecb8b5",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 7
      },
      "lineNbr": 0,
      "author": {
        "id": 1000188
      },
      "writtenOn": "2022-04-07T18:52:34Z",
      "side": 1,
      "message": "Just no DHCP at all. SLAAC with RA and we intentionally don\u0027t want to send DHCP requests.",
      "parentUuid": "da5e8a86_0640a74c",
      "revId": "2844d69f26aa3a6df325edb8fdf2c96376429e6b",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "595dfc56_0ec32c24",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 7
      },
      "lineNbr": 0,
      "author": {
        "id": 1000278
      },
      "writtenOn": "2022-04-07T19:06:36Z",
      "side": 1,
      "message": "Which this commit supports.\nThe D-Bus value v6stateless turns off DHCPv4, and assigns IPv6AcceptRA\u003dt and DHCPv6Client\u003df. This blocks the BMC from trying to find a DHCPv6 server.\n\nThe current code performs a weird action where IPv6AcceptRA\u003df, and assigns a value to DHCPv6Client\u003df, which doesn\u0027t do anything. DHCPv6Client only matters when IPv6AcceptRA\u003dt.\n\nDHCP\u003dipv6 is effectively DHCP\u003dfalse. I was surprised to see the DHCP\u003dipv6 even occur in my recent testing. The map is supposed to set it false.",
      "parentUuid": "250bb07b_20ecb8b5",
      "revId": "2844d69f26aa3a6df325edb8fdf2c96376429e6b",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2460cff7_ad1cf3f2",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 7
      },
      "lineNbr": 0,
      "author": {
        "id": 1000188
      },
      "writtenOn": "2022-04-07T19:19:18Z",
      "side": 1,
      "message": "This is kinda insane at this point. We should probably just fix the d-bus schema to get rid of the enum combinatoric chaos.",
      "parentUuid": "595dfc56_0ec32c24",
      "revId": "2844d69f26aa3a6df325edb8fdf2c96376429e6b",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "87711844_252d5645",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 7
      },
      "lineNbr": 0,
      "author": {
        "id": 1000022
      },
      "writtenOn": "2022-04-11T14:02:32Z",
      "side": 1,
      "message": "@william: We already have the acceptRA property, which can be used to accept only the RA but don\u0027t start the DHCP, That can be fixed here to support the stateless IP without DHCP.\n\n\u003e We should probably just fix the d-bus schema to get rid of the enum combinatoric chaos.\n\nWhat is the chaos here? We should support all the enum configuration.\n         - name: both\n          - name: v4v6stateless\n          - name: v6\n          - name: v6stateless\n          - name: v4\n          - name: none",
      "parentUuid": "2460cff7_ad1cf3f2",
      "revId": "2844d69f26aa3a6df325edb8fdf2c96376429e6b",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "37eb4a43_adb4790c",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 7
      },
      "lineNbr": 0,
      "author": {
        "id": 1000278
      },
      "writtenOn": "2022-04-21T20:48:30Z",
      "side": 1,
      "message": "William, what is your specific proposal to modify?\n\nThe code change submitted here encapsulates the management of the systemd.network configuration files to be fully controlled by phosphor-network. The prior code change that allowed IPv6AcceptRA leaked implementation details for systemd.network to both IPMI and Redfish.\n\nThe IPMI and Redfish code should request state changes, and allow phosphor-network to achieve those state changes. Performing the task with the enumerations above allows both IPMI and Redfish to request new state without knowledge of the underlying components. The whole of systemd-network could be replaced with some other IP stack and IPMI/Redfish requests would still operate the same.\n\nThe current upstream code can\u0027t even properly manage SLAAC.\nIf IPv6 DHCP is on, then DHCPv6Client is true, and thus is not performing SLAAC. \n    stream \u003c\u003c \"[IPv6AcceptRA]\\n\";\n    stream \u003c\u003c \"DHCPv6Client\u003d\";\n    stream \u003c\u003c (dhcpIsEnabled(IP::Protocol::IPv6) ? \"true\" : \"false\");\n\nIf a BMC is getting a SLAAC, then the RA has to be configured in a way to prevent the \"Managed\" bit from being returned to the submitter.\n\nWith the current upstream code there\u0027s no way to have IPv6 true and DHCPv6Client assigned false. This is the definition of SLAAC operation.\n\n\nThe changes I\u0027ve submitted, explicitly control DHCP, IPv6AcceptRA, and DHCPv6Client without relying on, or trying to divine correct operation, from current state.\n\nWith the changes proposed here even with the RA advertising the \"Managed\" bit, assigning IPv6AcceptRA\u003dtrue, DHCPClientv6\u003dfalse makes the BMC IP stack self assign.",
      "parentUuid": "87711844_252d5645",
      "revId": "2844d69f26aa3a6df325edb8fdf2c96376429e6b",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c05f595a_5992e512",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 7
      },
      "lineNbr": 0,
      "author": {
        "id": 1000278
      },
      "writtenOn": "2022-04-21T20:48:30Z",
      "side": 1,
      "message": "Maintainers,\nPlease suggest actionable changes, or approve the commit.",
      "revId": "2844d69f26aa3a6df325edb8fdf2c96376429e6b",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f75c9f8c_dee81485",
        "filename": "src/ethernet_interface.cpp",
        "patchSetId": 7
      },
      "lineNbr": 186,
      "author": {
        "id": 1001317
      },
      "writtenOn": "2022-04-06T04:41:50Z",
      "side": 1,
      "message": "It would be good if we break before default case.",
      "revId": "2844d69f26aa3a6df325edb8fdf2c96376429e6b",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}