{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "be933c02_26858856",
        "filename": "/COMMIT_MSG",
        "patchSetId": 7
      },
      "lineNbr": 10,
      "author": {
        "id": 1000382
      },
      "writtenOn": "2022-05-04T11:14:33Z",
      "side": 1,
      "message": "typo",
      "range": {
        "startLine": 10,
        "startChar": 62,
        "endLine": 10,
        "endChar": 66
      },
      "revId": "2844d69f26aa3a6df325edb8fdf2c96376429e6b",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "bfb91d26_122c5f9f",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 7
      },
      "lineNbr": 0,
      "author": {
        "id": 1000022
      },
      "writtenOn": "2022-04-05T02:18:43Z",
      "side": 1,
      "message": "I am good with the changes, Let william also take a look.",
      "revId": "2844d69f26aa3a6df325edb8fdf2c96376429e6b",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "136513ad_50ea9297",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 7
      },
      "lineNbr": 0,
      "author": {
        "id": 1000022
      },
      "writtenOn": "2022-04-06T09:43:27Z",
      "side": 1,
      "message": "Jonathan, You need to merge this with the following.\nhttps://gerrit.openbmc-project.xyz/c/openbmc/phosphor-host-ipmid/+/50987\nhttps://gerrit.openbmc-project.xyz/c/openbmc/bmcweb/+/509",
      "revId": "2844d69f26aa3a6df325edb8fdf2c96376429e6b",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "9ce49698_69cc3b89",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 7
      },
      "lineNbr": 0,
      "author": {
        "id": 1000278
      },
      "writtenOn": "2022-04-06T14:57:04Z",
      "side": 1,
      "message": "This can, and needs to, precede the BMCWeb and the IPMI commits.\nThe existing BMCWeb and IPMI code will still function correctly with this change in place.\nThe IPMI commit will be approved shortly after I merge this.\n",
      "revId": "2844d69f26aa3a6df325edb8fdf2c96376429e6b",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3689c326_3c6356c1",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 7
      },
      "lineNbr": 0,
      "author": {
        "id": 1000188
      },
      "writtenOn": "2022-04-06T16:36:29Z",
      "side": 1,
      "message": "I\u0027m still not okay with this for the comment I left before. We have use cases where we use DHCP\u003dfalse and IPv6AcceptRA\u003dtrue managed by phosphor-netowrkd, so this change can\u0027t work for us.\n\nI don\u0027t see why we can\u0027t fix this in IPMI and redfish layers to smooth out any issues an end user would run into. We should be able to just set both properties when changing the DHCPv6 state.",
      "parentUuid": "bfb91d26_122c5f9f",
      "revId": "2844d69f26aa3a6df325edb8fdf2c96376429e6b",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "da5e8a86_0640a74c",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 7
      },
      "lineNbr": 0,
      "author": {
        "id": 1000022
      },
      "writtenOn": "2022-04-07T08:20:18Z",
      "side": 1,
      "message": "@william: what are those use cases? \n          stateless DHCP????",
      "parentUuid": "3689c326_3c6356c1",
      "revId": "2844d69f26aa3a6df325edb8fdf2c96376429e6b",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "250bb07b_20ecb8b5",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 7
      },
      "lineNbr": 0,
      "author": {
        "id": 1000188
      },
      "writtenOn": "2022-04-07T18:52:34Z",
      "side": 1,
      "message": "Just no DHCP at all. SLAAC with RA and we intentionally don\u0027t want to send DHCP requests.",
      "parentUuid": "da5e8a86_0640a74c",
      "revId": "2844d69f26aa3a6df325edb8fdf2c96376429e6b",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "595dfc56_0ec32c24",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 7
      },
      "lineNbr": 0,
      "author": {
        "id": 1000278
      },
      "writtenOn": "2022-04-07T19:06:36Z",
      "side": 1,
      "message": "Which this commit supports.\nThe D-Bus value v6stateless turns off DHCPv4, and assigns IPv6AcceptRA\u003dt and DHCPv6Client\u003df. This blocks the BMC from trying to find a DHCPv6 server.\n\nThe current code performs a weird action where IPv6AcceptRA\u003df, and assigns a value to DHCPv6Client\u003df, which doesn\u0027t do anything. DHCPv6Client only matters when IPv6AcceptRA\u003dt.\n\nDHCP\u003dipv6 is effectively DHCP\u003dfalse. I was surprised to see the DHCP\u003dipv6 even occur in my recent testing. The map is supposed to set it false.",
      "parentUuid": "250bb07b_20ecb8b5",
      "revId": "2844d69f26aa3a6df325edb8fdf2c96376429e6b",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2460cff7_ad1cf3f2",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 7
      },
      "lineNbr": 0,
      "author": {
        "id": 1000188
      },
      "writtenOn": "2022-04-07T19:19:18Z",
      "side": 1,
      "message": "This is kinda insane at this point. We should probably just fix the d-bus schema to get rid of the enum combinatoric chaos.",
      "parentUuid": "595dfc56_0ec32c24",
      "revId": "2844d69f26aa3a6df325edb8fdf2c96376429e6b",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "87711844_252d5645",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 7
      },
      "lineNbr": 0,
      "author": {
        "id": 1000022
      },
      "writtenOn": "2022-04-11T14:02:32Z",
      "side": 1,
      "message": "@william: We already have the acceptRA property, which can be used to accept only the RA but don\u0027t start the DHCP, That can be fixed here to support the stateless IP without DHCP.\n\n\u003e We should probably just fix the d-bus schema to get rid of the enum combinatoric chaos.\n\nWhat is the chaos here? We should support all the enum configuration.\n         - name: both\n          - name: v4v6stateless\n          - name: v6\n          - name: v6stateless\n          - name: v4\n          - name: none",
      "parentUuid": "2460cff7_ad1cf3f2",
      "revId": "2844d69f26aa3a6df325edb8fdf2c96376429e6b",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "37eb4a43_adb4790c",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 7
      },
      "lineNbr": 0,
      "author": {
        "id": 1000278
      },
      "writtenOn": "2022-04-21T20:48:30Z",
      "side": 1,
      "message": "William, what is your specific proposal to modify?\n\nThe code change submitted here encapsulates the management of the systemd.network configuration files to be fully controlled by phosphor-network. The prior code change that allowed IPv6AcceptRA leaked implementation details for systemd.network to both IPMI and Redfish.\n\nThe IPMI and Redfish code should request state changes, and allow phosphor-network to achieve those state changes. Performing the task with the enumerations above allows both IPMI and Redfish to request new state without knowledge of the underlying components. The whole of systemd-network could be replaced with some other IP stack and IPMI/Redfish requests would still operate the same.\n\nThe current upstream code can\u0027t even properly manage SLAAC.\nIf IPv6 DHCP is on, then DHCPv6Client is true, and thus is not performing SLAAC. \n    stream \u003c\u003c \"[IPv6AcceptRA]\\n\";\n    stream \u003c\u003c \"DHCPv6Client\u003d\";\n    stream \u003c\u003c (dhcpIsEnabled(IP::Protocol::IPv6) ? \"true\" : \"false\");\n\nIf a BMC is getting a SLAAC, then the RA has to be configured in a way to prevent the \"Managed\" bit from being returned to the submitter.\n\nWith the current upstream code there\u0027s no way to have IPv6 true and DHCPv6Client assigned false. This is the definition of SLAAC operation.\n\n\nThe changes I\u0027ve submitted, explicitly control DHCP, IPv6AcceptRA, and DHCPv6Client without relying on, or trying to divine correct operation, from current state.\n\nWith the changes proposed here even with the RA advertising the \"Managed\" bit, assigning IPv6AcceptRA\u003dtrue, DHCPClientv6\u003dfalse makes the BMC IP stack self assign.",
      "parentUuid": "87711844_252d5645",
      "revId": "2844d69f26aa3a6df325edb8fdf2c96376429e6b",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c05f595a_5992e512",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 7
      },
      "lineNbr": 0,
      "author": {
        "id": 1000278
      },
      "writtenOn": "2022-04-21T20:48:30Z",
      "side": 1,
      "message": "Maintainers,\nPlease suggest actionable changes, or approve the commit.",
      "revId": "2844d69f26aa3a6df325edb8fdf2c96376429e6b",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "293c8b13_bdaa38f4",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 7
      },
      "lineNbr": 0,
      "author": {
        "id": 1000022
      },
      "writtenOn": "2022-04-27T15:26:23Z",
      "side": 1,
      "message": "@jonathan : What is broken now with this patch:  If user wants only the router published address and don\u0027t want any DHCP configuration then it will not work and that is breaking the old code..\n\nhttps://gerrit.openbmc-project.xyz/c/openbmc/phosphor-networkd/+/48040/7/src/ethernet_interface.cpp#574\n\nYou have stopped allowing the user to change this property and it can be only controlled through DHCP option, which is breaking the old code.",
      "parentUuid": "c05f595a_5992e512",
      "revId": "2844d69f26aa3a6df325edb8fdf2c96376429e6b",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "6ef14cd8_16991525",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 7
      },
      "lineNbr": 0,
      "author": {
        "id": 1000022
      },
      "writtenOn": "2022-04-27T15:30:12Z",
      "side": 1,
      "message": "in the RA message if A bit is set(M and O is not set) then you don\u0027t need DHCP, You only need the advertised  prefix from the router and do the SLAAC.",
      "parentUuid": "293c8b13_bdaa38f4",
      "revId": "2844d69f26aa3a6df325edb8fdf2c96376429e6b",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ce5e4509_15b8410b",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 7
      },
      "lineNbr": 0,
      "author": {
        "id": 1000278
      },
      "writtenOn": "2022-04-27T17:40:08Z",
      "side": 1,
      "message": "I don\u0027t understand your comment:\n\u0027You have stopped allowing the user to change this property and it can be only controlled through DHCP option, which is breaking the old code.\u0027\n\nThis portion of the interface was being used by BMCWeb and phosphor-ipmi-host to directly control IPv6AcceptRA.\n\nI have created two other patches in those repos that perform the correct action.\n\nAre you saying someone may be using a method that invokes this function outside of IPMI and Redfish? This, IMO, validates that we have the incorrect API present on D-Bus.\n\nThe whole point of this change is to eliminate the leak of how systemd.network performs the work of getting DHCPv4 and v6 configured. Making the IPv6AcceptRA element visible on D-Bus was a mistake. It enables only part of the control necessary to correctly manage IPv6 address assignment. It needs to be ditched, IMO.\n\n\"in the RA message if A bit is set(M and O is not set) then you don\u0027t need DHCP, You only need the advertised  prefix from the router and do the SLAAC.\"\n\nWhat happens when those bits ARE set and you don\u0027t want DHCP? Having the ability to explicitly write DHCPv6Client true/false allows the BMC to choose to accept or to ignore those bits. I\u0027ve configured my radvd to enable both of those, and with IPv6AcceptRA\u003dtrue/DHCPv6Client\u003dtrue you get both DHCPv6 and SLAAC addresses. Using the \"v6stateless\" enum changes the combination to \"true/false\" and the BMC only performs a SLAAC assignment. This seems to me to be the correct operation.\n\nIf the directive from the maintainers is to make the flagged function continue to work, and to keep the technical debt associated, then an actionable recommendation has been provided.\n\nIs keeping that D-Bus entry active and performing some action the direction the maintainers wish?",
      "parentUuid": "6ef14cd8_16991525",
      "revId": "2844d69f26aa3a6df325edb8fdf2c96376429e6b",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "eb038d4e_d19c0948",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 7
      },
      "lineNbr": 0,
      "author": {
        "id": 1000278
      },
      "writtenOn": "2022-04-27T17:40:08Z",
      "side": 1,
      "message": "Thank you for your specific objection/observation.",
      "revId": "2844d69f26aa3a6df325edb8fdf2c96376429e6b",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "401b2592_235b8f4b",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 7
      },
      "lineNbr": 0,
      "author": {
        "id": 1000022
      },
      "writtenOn": "2022-05-04T17:24:16Z",
      "side": 1,
      "message": "@jonathan : Before this patch we were having following types of IPv6 addresses supported.\n- DHCP stateful\n- DHCP stateless\n- Auto Configure address(SLAAC).\n\nWith this patch we are losing the third type of address.\n\nSay if user has disabled the DHCP, Can BMC get the SLAAC address (published by radvd where M, O is not set and  A bit is set), If not that is the concern.\n\n‘A’ flag set to 1 means a system will derive its IPv6 address based on the prefix information provided by a router  \n\n\u003e What happens when those bits(M \u0026 O) ARE set and you don\u0027t want DHCP? \n\nThat means disable the DHCP, However if the A bit is also set then BMC should get the SLAAC(Auto Configure address) and you can only get if the AcceptRa is true.\n\nHere is the meaning of certain flags:\n\nManaged (M flag) \u003d ‘1’ means the address is provided by stateful DHCPv6.\n\nOther (O flag) \u003d ‘1’ means that the address is provided by Stateless DHCPv6, useful for providing options when the client is doing SLAAC–Stateless Address Autoconfiguration. (Note, there is no option for a default gateway).\n\nAddress Autoconfiguration (A flag) \u003d ‘1’ means that it suggests the host creates its own IPv6 address using SLAAC.",
      "parentUuid": "ce5e4509_15b8410b",
      "revId": "2844d69f26aa3a6df325edb8fdf2c96376429e6b",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "7e765b73_7b09c46e",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 7
      },
      "lineNbr": 0,
      "author": {
        "id": 1000278
      },
      "writtenOn": "2022-05-04T18:22:36Z",
      "side": 1,
      "message": "What has been lost?\nCurrent upstream behavior:\nDirect enum control of the DHCP entry, with \"none\", \"ipv4\" and \"true\" the only valid values. The \"true\" value only impacts DHCPv4.\nDirect D-Bus control of IPv6AcceptRA\nNo control of DHCPv6Client. If IPv6AcceptRA \u003d true, then DHCPv6Client\u003dtrue, which only allows \"stateful\" address assignment. If \"stateless\" or \"slaac\" are happening with this setting it is the result of how the RA daemon is configured.\nThis model is \"working\".\n\nMy new code:\nControl of DHCP, IPv6AcceptRA, and DHCPv6Client via defined enums.\nVia the enums DHCP, IPv6AcceptRA, and DHCPv6Client can be set exactly as desired.\nAll 8 possible states are controllable with intent, not due to side-effects.\nThere has only been a gain in capability, not a loss.\n\nAt present BMCWeb does not implement any of the StatelessAddressAutoConfiguration schema. Thus OBMC has no direct way to instruct phosphor-network/systemd-networkd to configure SLAAC with intent.",
      "parentUuid": "401b2592_235b8f4b",
      "revId": "2844d69f26aa3a6df325edb8fdf2c96376429e6b",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "5585ff37_2c46d58f",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 7
      },
      "lineNbr": 0,
      "author": {
        "id": 1000278
      },
      "writtenOn": "2022-05-04T18:22:36Z",
      "side": 1,
      "message": "Ratan,\nThanks for your response.\nPlease see my explanation/defense of the submission below.\nI do not see any loss of capability, only an improvement in capability.",
      "revId": "2844d69f26aa3a6df325edb8fdf2c96376429e6b",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "67617405_f96de6b9",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 7
      },
      "lineNbr": 0,
      "author": {
        "id": 1000163
      },
      "writtenOn": "2022-05-05T22:07:23Z",
      "side": 1,
      "message": "@William, I do not understand how this will break the network for your requirements. If that is the case, can you be explicit on what part of this change is the problem?\n\nJohnathan created this change because the network configuration is not currently working for our needs. Rather than make a little fix that would probably necessitate further changes in the future, he made this change more complete, filling in all the possibilities.\n\nThe options offered in the patch not only provide a way to put the BMC into any of the dynamic addressing modes (all combinations of DHCPv4, DHCPv6, SLAAC, and NONE), but also does so in a very straightforward interface that is independent of IPMI and Redfish.\n\nSomehow both you and Ratan have come to the conclusion that this does not support v6 stateless (SLAAC). I am not sure how that conclusion was reached, given that this is explicitly one of the options available. If you disagree with that, please let Johnathan know how it does not fulfill your interpretation of this requirement.\n\nIf you are still not convinced, I would invite you to test the code in your environment and provide specific feedback on what is not working so we can move this patch forward.",
      "revId": "2844d69f26aa3a6df325edb8fdf2c96376429e6b",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f75c9f8c_dee81485",
        "filename": "src/ethernet_interface.cpp",
        "patchSetId": 7
      },
      "lineNbr": 186,
      "author": {
        "id": 1001317
      },
      "writtenOn": "2022-04-06T04:41:50Z",
      "side": 1,
      "message": "It would be good if we break before default case.",
      "revId": "2844d69f26aa3a6df325edb8fdf2c96376429e6b",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "113632a1_cb8addb0",
        "filename": "src/ethernet_interface.cpp",
        "patchSetId": 7
      },
      "lineNbr": 186,
      "author": {
        "id": 1000163
      },
      "writtenOn": "2022-05-05T22:07:23Z",
      "side": 1,
      "message": "+1",
      "parentUuid": "f75c9f8c_dee81485",
      "revId": "2844d69f26aa3a6df325edb8fdf2c96376429e6b",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "bea20bb7_e8a7be17",
        "filename": "src/ethernet_interface.cpp",
        "patchSetId": 7
      },
      "lineNbr": 236,
      "author": {
        "id": 1000350
      },
      "writtenOn": "2022-05-05T13:58:21Z",
      "side": 1,
      "message": "I think we need to identify specific origin for SLAAC/DHCP v6 addresses to map with right redfish enum and display correct AddressOrigin \nfor SLAAC address displaying as \"AddressOrigin\": \"DHCPv6\" does not look correct to me.",
      "revId": "2844d69f26aa3a6df325edb8fdf2c96376429e6b",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0360313e_5687d083",
        "filename": "src/ethernet_interface.cpp",
        "patchSetId": 7
      },
      "lineNbr": 236,
      "author": {
        "id": 1000163
      },
      "writtenOn": "2022-05-05T22:07:23Z",
      "side": 1,
      "message": "This is networking code, not Redfish code. The network configuration daemon should provide an interface that is independent of all the clients that would call into it. The interfaces should work for IPMI and Redfish, but should not have anything specific to either of them.",
      "parentUuid": "bea20bb7_e8a7be17",
      "revId": "2844d69f26aa3a6df325edb8fdf2c96376429e6b",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "27e1859a_44732410",
        "filename": "src/network_config.cpp",
        "patchSetId": 7
      },
      "lineNbr": 41,
      "author": {
        "id": 1000382
      },
      "writtenOn": "2022-05-04T11:14:33Z",
      "side": 1,
      "message": "Should this also go under ENABLE_IPV6_ACCEPT_RA compiler flag?",
      "range": {
        "startLine": 41,
        "startChar": 17,
        "endLine": 41,
        "endChar": 54
      },
      "revId": "2844d69f26aa3a6df325edb8fdf2c96376429e6b",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}