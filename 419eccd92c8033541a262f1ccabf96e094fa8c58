{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "73ce5e29_c2b0d66c",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1000278
      },
      "writtenOn": "2024-12-03T17:04:01Z",
      "side": 1,
      "message": "A fair bit of personal opinion enclosed.",
      "revId": "419eccd92c8033541a262f1ccabf96e094fa8c58",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "0c9faf31_c85562dd",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1000016
      },
      "writtenOn": "2024-12-05T04:15:40Z",
      "side": 1,
      "message": "Thanks for the review - I do appreciate the input, including the personal opinion!",
      "parentUuid": "73ce5e29_c2b0d66c",
      "revId": "419eccd92c8033541a262f1ccabf96e094fa8c58",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ef9f7346_49f22b96",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1000016
      },
      "writtenOn": "2024-12-05T07:54:00Z",
      "side": 1,
      "message": "I have pushed a new change here; I have marked some of the comments as done, but others just had responses from me. Feel free to either mark as resolved as you see fit, or follow up on the discussion.",
      "revId": "419eccd92c8033541a262f1ccabf96e094fa8c58",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a850b320_24dba05b",
        "filename": "src/ncsi_cmd.cpp",
        "patchSetId": 4
      },
      "lineNbr": 84,
      "author": {
        "id": 1000278
      },
      "writtenOn": "2024-12-03T17:04:01Z",
      "side": 1,
      "message": "Is there a reason to force base-16 on the UI?",
      "revId": "419eccd92c8033541a262f1ccabf96e094fa8c58",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f588ae4a_692f916d",
        "filename": "src/ncsi_cmd.cpp",
        "patchSetId": 4
      },
      "lineNbr": 84,
      "author": {
        "id": 1000016
      },
      "writtenOn": "2024-12-05T04:15:40Z",
      "side": 1,
      "message": "More convention than anything else. The NCSI docs, as well as existing commands, all use hex for the opcode values, so this avoids requiring the user to add 0x all over the place.",
      "parentUuid": "a850b320_24dba05b",
      "revId": "419eccd92c8033541a262f1ccabf96e094fa8c58",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "36237c66_6cf68d29",
        "filename": "src/ncsi_cmd.cpp",
        "patchSetId": 4
      },
      "lineNbr": 84,
      "author": {
        "id": 1000016
      },
      "writtenOn": "2025-02-04T03:50:03Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "f588ae4a_692f916d",
      "revId": "419eccd92c8033541a262f1ccabf96e094fa8c58",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0fe4418a_5323c60d",
        "filename": "src/ncsi_cmd.cpp",
        "patchSetId": 4
      },
      "lineNbr": 93,
      "author": {
        "id": 1000278
      },
      "writtenOn": "2024-12-03T17:04:01Z",
      "side": 1,
      "message": "I would prefer the payload be represented on the command line as space delimited octets instead of a concatenated string of base-16 pairs that are hard to read and confirm correct.\n\nIs there a compelling reason to maintain the, IMO.... impolite, model of ncsi_netlink? Can this wart be hidden from the user?\n\nIf there is a desire to keep the packed string, perhaps add a command line switch that reads octets?",
      "revId": "419eccd92c8033541a262f1ccabf96e094fa8c58",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5e5629b3_2448a077",
        "filename": "src/ncsi_cmd.cpp",
        "patchSetId": 4
      },
      "lineNbr": 93,
      "author": {
        "id": 1000016
      },
      "writtenOn": "2024-12-05T04:15:40Z",
      "side": 1,
      "message": "Yeah, I\u0027d agree that the payload format in `ncsi-netlink` is a bit awkward.\n\nI could just autodetect a packed string vs. separate octets, would that suit? Would prefer to avoid an explicit argument (to define the format) if we can detect reliably.",
      "parentUuid": "0fe4418a_5323c60d",
      "revId": "419eccd92c8033541a262f1ccabf96e094fa8c58",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c076a048_483fc94c",
        "filename": "src/ncsi_cmd.cpp",
        "patchSetId": 4
      },
      "lineNbr": 93,
      "author": {
        "id": 1000016
      },
      "writtenOn": "2024-12-05T07:54:00Z",
      "side": 1,
      "message": "OK, new change pushed that allows either format.",
      "parentUuid": "5e5629b3_2448a077",
      "revId": "419eccd92c8033541a262f1ccabf96e094fa8c58",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "97053b6f_d252194e",
        "filename": "src/ncsi_cmd.cpp",
        "patchSetId": 4
      },
      "lineNbr": 186,
      "author": {
        "id": 1000278
      },
      "writtenOn": "2024-12-03T17:04:01Z",
      "side": 1,
      "message": "Why are you filling a std::shared with a std::unique?",
      "revId": "419eccd92c8033541a262f1ccabf96e094fa8c58",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f9579683_18ab99d0",
        "filename": "src/ncsi_cmd.cpp",
        "patchSetId": 4
      },
      "lineNbr": 186,
      "author": {
        "id": 1000016
      },
      "writtenOn": "2024-12-05T04:15:40Z",
      "side": 1,
      "message": "Excellent question. I\u0027ll see if we still need the shared_ptr at all.",
      "parentUuid": "97053b6f_d252194e",
      "revId": "419eccd92c8033541a262f1ccabf96e094fa8c58",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "71fd7537_4a5bface",
        "filename": "src/ncsi_cmd.cpp",
        "patchSetId": 4
      },
      "lineNbr": 186,
      "author": {
        "id": 1000016
      },
      "writtenOn": "2024-12-05T07:54:00Z",
      "side": 1,
      "message": "We can do this with just the unique_ptr, and prevent a couple of copies too.",
      "parentUuid": "f9579683_18ab99d0",
      "revId": "419eccd92c8033541a262f1ccabf96e094fa8c58",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7e4da40b_6fae7aed",
        "filename": "src/ncsi_cmd.cpp",
        "patchSetId": 4
      },
      "lineNbr": 241,
      "author": {
        "id": 1000278
      },
      "writtenOn": "2024-12-03T17:04:01Z",
      "side": 1,
      "message": "why does OEM use `auto payload` and this pre-defines `payload`?",
      "revId": "419eccd92c8033541a262f1ccabf96e094fa8c58",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f2e7c021_d99a608c",
        "filename": "src/ncsi_cmd.cpp",
        "patchSetId": 4
      },
      "lineNbr": 241,
      "author": {
        "id": 1000016
      },
      "writtenOn": "2024-12-05T04:15:40Z",
      "side": 1,
      "message": "Because raw allows an empty payload, so we construct an empty one here, in case no payload argument was provided.",
      "parentUuid": "7e4da40b_6fae7aed",
      "revId": "419eccd92c8033541a262f1ccabf96e094fa8c58",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8d419499_50365b11",
        "filename": "src/ncsi_cmd.cpp",
        "patchSetId": 4
      },
      "lineNbr": 241,
      "author": {
        "id": 1000016
      },
      "writtenOn": "2025-02-04T03:50:03Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "f2e7c021_d99a608c",
      "revId": "419eccd92c8033541a262f1ccabf96e094fa8c58",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4fa01b56_fb185de0",
        "filename": "src/ncsi_cmd.cpp",
        "patchSetId": 4
      },
      "lineNbr": 263,
      "author": {
        "id": 1000278
      },
      "writtenOn": "2024-12-03T17:04:01Z",
      "side": 1,
      "message": "follow OEM model?\n`auto payload \u003d ...`",
      "revId": "419eccd92c8033541a262f1ccabf96e094fa8c58",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "787f6176_89b5d51c",
        "filename": "src/ncsi_cmd.cpp",
        "patchSetId": 4
      },
      "lineNbr": 263,
      "author": {
        "id": 1000016
      },
      "writtenOn": "2024-12-05T04:15:40Z",
      "side": 1,
      "message": "We need to check the std::optional before assigning to `payload`, and (as above) fall back to the default (empty) payload if none was provided.",
      "parentUuid": "4fa01b56_fb185de0",
      "revId": "419eccd92c8033541a262f1ccabf96e094fa8c58",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "7d4d5184_78ddb420",
        "filename": "src/ncsi_cmd.cpp",
        "patchSetId": 4
      },
      "lineNbr": 263,
      "author": {
        "id": 1000016
      },
      "writtenOn": "2025-02-04T03:50:03Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "787f6176_89b5d51c",
      "revId": "419eccd92c8033541a262f1ccabf96e094fa8c58",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "33894931_d8217358",
        "filename": "src/ncsi_cmd.cpp",
        "patchSetId": 4
      },
      "lineNbr": 320,
      "author": {
        "id": 1000278
      },
      "writtenOn": "2024-12-03T17:04:01Z",
      "side": 1,
      "message": "Not following the logic here.\nIt would be nice if there were a comment indicating the theory...",
      "revId": "419eccd92c8033541a262f1ccabf96e094fa8c58",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3eb5f8ba_72203d11",
        "filename": "src/ncsi_cmd.cpp",
        "patchSetId": 4
      },
      "lineNbr": 320,
      "author": {
        "id": 1000016
      },
      "writtenOn": "2024-12-05T04:15:40Z",
      "side": 1,
      "message": "OK, shall do!",
      "parentUuid": "33894931_d8217358",
      "revId": "419eccd92c8033541a262f1ccabf96e094fa8c58",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "56f05ce7_72cd0b62",
        "filename": "src/ncsi_cmd.cpp",
        "patchSetId": 4
      },
      "lineNbr": 320,
      "author": {
        "id": 1000016
      },
      "writtenOn": "2024-12-05T07:54:00Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "3eb5f8ba_72203d11",
      "revId": "419eccd92c8033541a262f1ccabf96e094fa8c58",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "57ccfd42_7d37b935",
        "filename": "src/ncsi_netlink_main.cpp",
        "patchSetId": 4
      },
      "lineNbr": 149,
      "author": {
        "id": 1000278
      },
      "writtenOn": "2024-12-03T17:04:01Z",
      "side": 1,
      "message": "Did I misread the change?\nIsn\u0027t this sent as -oem (i.e. 0x50) and the rest is just the packed string?",
      "revId": "419eccd92c8033541a262f1ccabf96e094fa8c58",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8d666d41_6a3135dd",
        "filename": "src/ncsi_netlink_main.cpp",
        "patchSetId": 4
      },
      "lineNbr": 149,
      "author": {
        "id": 1000016
      },
      "writtenOn": "2024-12-05T04:15:40Z",
      "side": 1,
      "message": "Not sure I 100% understand the question, but the first byte on the packed string argument is interpreted the opcode field (both before and after this change).\n\nIt has always been possible to use `-o` to send non-OEM commands, by specifying a value other than `50` as the first byte in the string.\n\nI\u0027ve tried to make this more explicit in the new `ncsi-cmd`, through the `oem` vs `raw` subcommands.",
      "parentUuid": "57ccfd42_7d37b935",
      "revId": "419eccd92c8033541a262f1ccabf96e094fa8c58",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d46a6202_9b42e017",
        "filename": "src/ncsi_netlink_main.cpp",
        "patchSetId": 4
      },
      "lineNbr": 149,
      "author": {
        "id": 1000016
      },
      "writtenOn": "2025-02-04T03:50:03Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "8d666d41_6a3135dd",
      "revId": "419eccd92c8033541a262f1ccabf96e094fa8c58",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e798c90c_98ba8178",
        "filename": "src/ncsi_netlink_main.cpp",
        "patchSetId": 4
      },
      "lineNbr": 177,
      "author": {
        "id": 1000278
      },
      "writtenOn": "2024-12-03T17:04:01Z",
      "side": 1,
      "message": "Suggestion: summarily remove -o from ncsi-netlink, and print a \"use ncsi-cmd\" message.\nThe following code is kludgy...",
      "revId": "419eccd92c8033541a262f1ccabf96e094fa8c58",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b63e6b2a_8343a233",
        "filename": "src/ncsi_netlink_main.cpp",
        "patchSetId": 4
      },
      "lineNbr": 177,
      "author": {
        "id": 1000016
      },
      "writtenOn": "2024-12-05T04:15:40Z",
      "side": 1,
      "message": "It\u0027s kludgy, but temporary.\n\nWe need this so that we don\u0027t break things in the transition to `ncsi-cmd`. Once this change is merged, we can update the in-tree usage of `ncsi-netlink -o` to use `ncsi-cmd` directly, then remove the compatibility later.\n\nThat should be a fairly quick process, there are only a small number of instances where `ncsi-netlink -o` is used.",
      "parentUuid": "e798c90c_98ba8178",
      "revId": "419eccd92c8033541a262f1ccabf96e094fa8c58",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e91b2261_e09c0f8a",
        "filename": "src/ncsi_netlink_main.cpp",
        "patchSetId": 4
      },
      "lineNbr": 177,
      "author": {
        "id": 1000016
      },
      "writtenOn": "2025-02-04T03:50:03Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "b63e6b2a_8343a233",
      "revId": "419eccd92c8033541a262f1ccabf96e094fa8c58",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}