{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "c9b4ade1_2f02d820",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 22
      },
      "lineNbr": 0,
      "author": {
        "id": 1000350
      },
      "writtenOn": "2023-04-04T14:33:05Z",
      "side": 1,
      "message": "William/Ratan\nCan you please review this commit",
      "revId": "de1f8d5c2ee6816911329277450e849ecabae53a",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "523ac571_5cdc6d90",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 22
      },
      "lineNbr": 0,
      "author": {
        "id": 1000278
      },
      "writtenOn": "2023-04-10T17:56:35Z",
      "side": 1,
      "message": "Ravi,\nI\u0027m reviewing three separate commits, this being one, intended to resolve Issue #60 from the phosphor-networkd repo. Do you mind clarifying the intent with this change?",
      "revId": "de1f8d5c2ee6816911329277450e849ecabae53a",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "0548fcc7_34b8dc13",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 22
      },
      "lineNbr": 0,
      "author": {
        "id": 1000350
      },
      "writtenOn": "2023-04-13T09:03:10Z",
      "side": 1,
      "message": "Hi Johnathan \n\nThis change is make sure bmc get stand-alone DHCPv6 IP address when there is no RA Router attached in the network.\non example is say DHPC server directly connected to BMC through Ethernet cross cable then BMC does not get DHCPv6 IP even though dhcp server is up and running.\nso this commit sets WithoutRA\u003dsolicit when DHCP enabled so that BMC gets IPv6 DHCP Address when there is no RA router attached in the network",
      "parentUuid": "523ac571_5cdc6d90",
      "revId": "de1f8d5c2ee6816911329277450e849ecabae53a",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8ea6963c_639da69c",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 22
      },
      "lineNbr": 0,
      "author": {
        "id": 1000278
      },
      "writtenOn": "2023-04-13T14:19:54Z",
      "side": 1,
      "message": "I don\u0027t approve of adding this commit to the phosphor-network mainline.\n\nThis creates an undesirable side-effect for environments that have a DHCPv6 server, but don\u0027t want their BMC to have a DHCPv6 address. When the BMC is told to turn RA off the expectation is there will only be static IPv6 addresses and static routes present in the system.\n\nThis is especially important for IPMI, as the only knob to modify is Set Lan Config Routing Advertisement Configuration. When this register has disabled \"dynamic router advertisement\" (bit 2 clear) the expectation is there will be no addresses reported in Get LAN Config IPv6 Dynamic Address.\n\nThis change causes the IPv6 Dynamic Address to report a value. This commit assumes this is desirable for all OBMC users. I already have several defects filed against phosphor-network related to IPMI DHCPv6/v4 address handling. Allowing this commit to propagate only ensures I have another added to the list.\n\nIt is mandatory for IPMI to work, correctly, for all use cases. The only in-band method for controlling IPv4/IPv6 addressing from BIOS is via IPMI. It is also highly desirable that solutions operate without requiring retooling BIOS IPMI behavior. It appears that most commits only test Redfish functionality, without regard to IPMI functionality. IMO a commit has to function in both Redfish, and IPMI before it is submitted for review.\n\nThis was the point of adding the DHCP enumerations in phos-dbus-intf over a year ago. It allowed IPMI to perform correct state transforms while only having control of the single Routing Advertisement Configuration register.",
      "revId": "de1f8d5c2ee6816911329277450e849ecabae53a",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "da983033_2e87679c",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 22
      },
      "lineNbr": 0,
      "author": {
        "id": 1000350
      },
      "writtenOn": "2023-04-18T17:08:14Z",
      "side": 1,
      "message": "William/Ratan\ncan you please share your opinion/suggestions here?",
      "parentUuid": "8ea6963c_639da69c",
      "revId": "de1f8d5c2ee6816911329277450e849ecabae53a",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8459b4d6_97465531",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 22
      },
      "lineNbr": 0,
      "author": {
        "id": 1000278
      },
      "writtenOn": "2023-04-19T21:33:28Z",
      "side": 1,
      "message": "Additional clarification, I think.",
      "revId": "de1f8d5c2ee6816911329277450e849ecabae53a",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c83d139e_e0e73b3f",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 22
      },
      "lineNbr": 0,
      "author": {
        "id": 1000278
      },
      "writtenOn": "2023-04-26T15:32:18Z",
      "side": 1,
      "message": "Sorry for the essay.",
      "revId": "de1f8d5c2ee6816911329277450e849ecabae53a",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "71386286_973df371",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 22
      },
      "lineNbr": 0,
      "author": {
        "id": 1000278
      },
      "writtenOn": "2023-05-18T17:38:13Z",
      "side": 1,
      "message": "Responding to Sunitha.",
      "revId": "de1f8d5c2ee6816911329277450e849ecabae53a",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "cbd5c4c3_ba534745",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 22
      },
      "lineNbr": 0,
      "author": {
        "id": 1000278
      },
      "writtenOn": "2023-05-23T20:28:05Z",
      "side": 1,
      "message": "How does this commit relate to 63444?",
      "revId": "de1f8d5c2ee6816911329277450e849ecabae53a",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1be3521b_5005aafb",
        "filename": "src/ethernet_interface.cpp",
        "patchSetId": 22
      },
      "lineNbr": 656,
      "author": {
        "id": 1000278
      },
      "writtenOn": "2023-04-10T17:56:35Z",
      "side": 1,
      "message": "What is the purpose of this change?\nI applied this code and tried a few things on my SUT.\nThe first was to confirm my RA/DHCPv6 servers supplied a DHCP address and route that allowed me to send/receive packets.\nI then used the IPv6 Router Address Configuration Control, \u0027ipmitool raw 0xc 1 1 0x40 1\u0027, to disable RA. The expectation is that the DHCPv6 address will also disappear.\nI was surprised to find that my BMC still had a DHCPv6 address.\nI was also surprised to find that traffic via that address failed to operate.\n\nThis change appears to introduce two unwanted artifacts.\nHow is your SUT/environment configured such that this change is desirable in your environment?",
      "revId": "de1f8d5c2ee6816911329277450e849ecabae53a",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "543822ba_56fb9bd7",
        "filename": "src/ethernet_interface.cpp",
        "patchSetId": 22
      },
      "lineNbr": 656,
      "author": {
        "id": 1000350
      },
      "writtenOn": "2023-04-13T09:03:10Z",
      "side": 1,
      "message": "Existing change works fine as long as RA packets are received by BMC.\nsay if there are no RA packets received from router then bmc does not get DHCPv6 IP even though DHCPv6 server up and running, are you noticing same behaviour ?\nIs it expected behaviour as per RFCs?",
      "parentUuid": "1be3521b_5005aafb",
      "revId": "de1f8d5c2ee6816911329277450e849ecabae53a",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "17acabf3_87a40d24",
        "filename": "src/ethernet_interface.cpp",
        "patchSetId": 22
      },
      "lineNbr": 656,
      "author": {
        "id": 1000278
      },
      "writtenOn": "2023-04-19T21:33:28Z",
      "side": 1,
      "message": "What are you defining as \"existing change\"?\n\nWith this code change in place I use the IPv6 Router Address Config Control command shown in my prior comment.\n\nThis sets IPv6AcceptRA\u003dfalse. \n\nIPMI has no control over the dhcpv6() function. It can control dhcpv4(), and it can control IPv6AcceptRA. The RA/DHCPv6 schism is not understood or managed by IPMI.\n\nSo dhcpv6() is still true.\n\nWhen \"WithoutRA\u003dsolicit\" is active, my DHCPv6 server provides a Stateless DHCPv6 address.\n\nThe expectation when IPv6AcceptRA is disabled, is any SLAAC, Stateless DHCPv6, or Stateful DHCPv6 addresses will no longer be reported in IPMI Get Lan Param 59.\n\nIf IPMI Get Lan Param 59 is populated in any way when IPv6AcceptRA has been disabled the behavior will be considered a defect from Intel.\n\nThe in-band IPMI control of IPv6 addresses from the BIOS has to behave properly.\nThere\u0027s already an issue with the IPv6 Gateway failing to operate correctly when static IPv6 is active.\n\nIt is unsatisfactory to only support Redfish.",
      "parentUuid": "543822ba_56fb9bd7",
      "revId": "de1f8d5c2ee6816911329277450e849ecabae53a",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9a6f3ec3_1430ba75",
        "filename": "src/ethernet_interface.cpp",
        "patchSetId": 22
      },
      "lineNbr": 656,
      "author": {
        "id": 1000350
      },
      "writtenOn": "2023-04-24T05:23:21Z",
      "side": 1,
      "message": "Johnathan\n\nI understand your point, When \"WithoutRA\u003dsolicit\" is active, DHCPv6 server only provides a Stateful DHCPv6 IP address and Stateless ipv6 address configured based on Ipv6AcceptRa enable/disable flag and IPv6AcceptRA property can controlled independently.\n\nplease have a look this commit \nhttps://gerrit.openbmc.org/c/openbmc/phosphor-networkd/+/62033\nThis commit removes dependancy between",
      "parentUuid": "17acabf3_87a40d24",
      "revId": "de1f8d5c2ee6816911329277450e849ecabae53a",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "244f0e60_85f14544",
        "filename": "src/ethernet_interface.cpp",
        "patchSetId": 22
      },
      "lineNbr": 656,
      "author": {
        "id": 1000278
      },
      "writtenOn": "2023-04-26T15:32:18Z",
      "side": 1,
      "message": "I still don\u0027t quite understand what \"problem\" this is trying to solve.\nIMO this is optimizing for a use case that won\u0027t be present in the BMCs environment.\nIs it really likely that a room full of servers with BMCs on board are going to be in a RA-less network? IMO this is extremely unlikely.\n\nTLDR; don\u0027t support WithoutRA in OpenBMC. Simplify the RA/DHCPv6 model.\n\nI agree that D-Bus permits control of a DHCPv4 boolean, a DHCPv6 boolean, and the IPv6AcceptRA boolean. However, there is no direct mapping in either Redfish or IPMI for all three of these booleans.\n\nIPMI can only control DHCPv4, and IPv6AcceptRA.\nRedfish has control of the DHCPv4 boolean.\nRedfish OperatingMode only controls DHCPv6 state at the current moment. I don\u0027t see an obvious location for Redfish to control IPv6AcceptRA. IMO StatelessAddressAutoConfiguration is not it.\n\nIMO, the 98+% use case for OperatingMode enabled is IPv6AcceptRA enabled, DHCPv6 enabled. Right now there is no way for Redfish to fully DISABLE IPv6. If you use Redfish to \"Disable\" DHCPv6 via OperatingMode you still have the possibility of SLAAC addresses being assigned. This is a surprising outcome. The Redfish command was to \"Disable\" dynamic address assignment. If you use the proposed StatelessAddressAutoConfiguration commit to disable IPv6AcceptRA you have just eliminated Stateful DHCPv6 assignment. This is a surprising outcome. I toggled a Stateless control and I have my Stateful addresses impacted? IMO OperatingMode disabled should change the phosphor-network D-Bus entries to IPv6AcceptRA\u003ddisabled, DHCPv6 disabled. Now all dynamic addressing is disabled, which mirrors the DHCPv4 model.\n\nFollowing that paradigm IPMI can be updated to do the same when Set LAN Config IPv6 Router Address Configuration is toggled. Asserting bit 1 in this command enables both IPv6AcceptRA and DHCPv6. Clearing bit 1 disables IPv6AcceptRA and DHCPv6.\n\nIf we use this paradigm:\nNetworks with an RA/DHCPv6 server will configure the BMC with Stateful addresses if the DHCPv6 server is configured that way. It will assign Stateless addresses if the network segment has an RA only asserting the \u0027O\u0027 bit, and the DHCPv6 server is providing secondary IP addresses (DNS/NTP/etc..). If there isn\u0027t an RA on the network segment, then we should press the Redfish working group for a control allowing the DHCPv6 system to request what to do when an RA is not present.\n\nUsing this paradigm allows IPMI to work orthogonally without having to create some OpenBMC centric OEM command for controlling the DHCPv6 boolean independently of the IPv6AcceptRA boolean. If in the future there is a control added for controlling WithoutRA then IPMI will need some mechanism added for controlling it.",
      "parentUuid": "9a6f3ec3_1430ba75",
      "revId": "de1f8d5c2ee6816911329277450e849ecabae53a",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "75f9f08d_b0045c5f",
        "filename": "src/ethernet_interface.cpp",
        "patchSetId": 22
      },
      "lineNbr": 656,
      "author": {
        "id": 1000382
      },
      "writtenOn": "2023-05-17T09:29:00Z",
      "side": 1,
      "message": "Hi Johnathan, If I understand this correctly:\n\n1. Do not allow DHCPv6 client to work at BMC, if there is no router in the network. \u003d\u003e \nWe have some commits in flight where this network setting (WithoutRA) is controlled by a meson feature flag. With this, systems which are planning to support standalone DHCPv6 server (without a router in the network) can use this option to enable BMC to send out the DHCPv6 request packets without getting a ping from the Ipv6 router. \n@Ravi - this code needs to be modified to check the feature flag and then update the configuration file.\n\n2. IPMI does not provide a way to independently toggle the IPv6AcceptRA flag.\n\u003d\u003e \nRedfish provides the same functionality. Ravi has a bmcweb commit where he has separated out the SLAAC and Stateful DHCPv6 settings via that interface. \n\nAre these changes breaking IPMI? Since networkd has independent settings to enable the user to consume dynamic IPv6 in various ways, i think IPMI should be enhanced to provide a user interface for the same.",
      "parentUuid": "244f0e60_85f14544",
      "revId": "de1f8d5c2ee6816911329277450e849ecabae53a",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "bc549e69_5f85704b",
        "filename": "src/ethernet_interface.cpp",
        "patchSetId": 22
      },
      "lineNbr": 656,
      "author": {
        "id": 1000278
      },
      "writtenOn": "2023-05-18T17:38:13Z",
      "side": 1,
      "message": "IMO, the goal for all of the RA/DHCPv6 changes is to have parity between IPMI and Redfish. My changes from Oct/Nov 2021 where I added the DHCP enumerations achieved that goal based on my knowledge at that time. That code has not been accepted, and a new method needs to be created.\n\nThe changes in progress are not meeting the goal.\nIPMI spec only allows control over DHCPv4, and IPv6AcceptRA. There is no control over the DHCPv6 boolean. Using IPMI to make state changes following a Redfish configuration leaves the BMC IPv6 network stack in a state that cannot be reversed. This leaves IPMI with a functionality gap. You wrote \"I think IPMI should be enhanced...\". The IPMI 2.0 spec is EOL, and gaps like this aren\u0027t going to be addressed by the standards group. What enhancements do you propose to allow IPMI to reach parity?\n\n\"Are these changes breaking IPMI?\" IPMI is already broken. The question that needs to be asked is \"Are these changes fixing IPMI?\". As well as \"Are these changes making IPMI worse?\". Another question is \"How is OpenBMC going to fix IPMI?\" IPMI must function correctly. The BIOS for Intel servers uses IPMI to configure IPv6. The BIOS has to be able to adequately maintain IPv6 state via IPMI, and do so in a way that doesn\u0027t break changes made via Redfish.\n\nAdding the WithoutRA functionality only makes the gap worse.\n\nAs someone who still has to deal with IPMI my, perhaps mistaken impression, is that most contributors are Redfish centric. I prefer that changes made upstream don\u0027t make IPMI functionality worse.",
      "parentUuid": "75f9f08d_b0045c5f",
      "revId": "de1f8d5c2ee6816911329277450e849ecabae53a",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "878a0b95_962ed632",
        "filename": "src/ethernet_interface.cpp",
        "patchSetId": 22
      },
      "lineNbr": 656,
      "author": {
        "id": 1000053
      },
      "writtenOn": "2023-05-19T07:41:17Z",
      "side": 1,
      "message": "I\u0027m not going to comment on IPMI vs Redfish spec, my understanding \u0026 feedback on the DHCPv6 in general is:\nRouter with RA support in network is not a must to support DHCPv6. Router\u0027s RA can also act as a triggering point to initiate dhcpv6 message exchanges. \n\n   A client initiates a message exchange with a server or servers to\n   acquire or update configuration information of interest.  A client\n   has many reasons to initiate the configuration exchange.  Some of the\n   more common ones are:\n\n   1.  as part of the operating system configuration/bootstrap process,\n\n   2.  when requested to do so by the application layer (through an\n       operating-system-specific API),\n\n   3.  when a Router Advertisement indicates that DHCPv6 is available\n       for address configuration (see Section 4.2 of [RFC4861]),\n\n   4.  as required to extend the lifetime of address(es) and/or\n       delegated prefix(es), using Renew and Rebind messages, or\n\n   5.  upon the receipt of a Reconfigure message, when requested to do\n       so by a server.",
      "parentUuid": "bc549e69_5f85704b",
      "revId": "de1f8d5c2ee6816911329277450e849ecabae53a",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}