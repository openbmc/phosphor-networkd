{
  "comments": [
    {
      "key": {
        "uuid": "4302c6be_06951902",
        "filename": "ethernet_interface.cpp",
        "patchSetId": 1
      },
      "lineNbr": 566,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2020-06-02T11:01:07Z",
      "side": 1,
      "message": "Suggest moving these cleanups to another commit so they are distinct from meson build changes.",
      "revId": "613c2099172997a08bd382480fd335f2a8fc73f5",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "45a929fb_44c706b8",
        "filename": "ethernet_interface.cpp",
        "patchSetId": 1
      },
      "lineNbr": 566,
      "author": {
        "id": 1000022
      },
      "writtenOn": "2020-06-02T13:16:48Z",
      "side": 1,
      "message": "+1",
      "parentUuid": "4302c6be_06951902",
      "revId": "613c2099172997a08bd382480fd335f2a8fc73f5",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "94720950_568da7c9",
        "filename": "meson.build",
        "patchSetId": 1
      },
      "lineNbr": 2,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2020-06-02T11:01:07Z",
      "side": 1,
      "message": "Please un-tab the file.",
      "revId": "613c2099172997a08bd382480fd335f2a8fc73f5",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "06d30412_d67fbd1f",
        "filename": "meson.build",
        "patchSetId": 1
      },
      "lineNbr": 8,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2020-06-02T11:01:07Z",
      "side": 1,
      "message": "Similar suggestions here as your bmcweb changes.",
      "range": {
        "startLine": 4,
        "startChar": 0,
        "endLine": 8,
        "endChar": 0
      },
      "revId": "613c2099172997a08bd382480fd335f2a8fc73f5",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b4729d7d_70001a20",
        "filename": "meson.build",
        "patchSetId": 1
      },
      "lineNbr": 29,
      "author": {
        "id": 1000022
      },
      "writtenOn": "2020-06-02T13:16:48Z",
      "side": 1,
      "message": "Are we using it?",
      "range": {
        "startLine": 29,
        "startChar": 0,
        "endLine": 29,
        "endChar": 31
      },
      "revId": "613c2099172997a08bd382480fd335f2a8fc73f5",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a347d0c7_8a5f327c",
        "filename": "meson.build",
        "patchSetId": 1
      },
      "lineNbr": 34,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2020-06-02T11:01:07Z",
      "side": 1,
      "message": "Also think this is unnecessary here.",
      "revId": "613c2099172997a08bd382480fd335f2a8fc73f5",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d49f1191_3f05948c",
        "filename": "meson.build",
        "patchSetId": 1
      },
      "lineNbr": 45,
      "author": {
        "id": 1000022
      },
      "writtenOn": "2020-06-02T13:16:48Z",
      "side": 1,
      "message": "Can we take this in test/meson.build???",
      "range": {
        "startLine": 43,
        "startChar": 0,
        "endLine": 45,
        "endChar": 34
      },
      "revId": "613c2099172997a08bd382480fd335f2a8fc73f5",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fbbfa6e7_de944aae",
        "filename": "meson.build",
        "patchSetId": 1
      },
      "lineNbr": 55,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2020-06-02T11:01:07Z",
      "side": 1,
      "message": "This seems ancient behavior.  Is it still necessary (@Ratan)?",
      "range": {
        "startLine": 49,
        "startChar": 0,
        "endLine": 55,
        "endChar": 5
      },
      "revId": "613c2099172997a08bd382480fd335f2a8fc73f5",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "410dd699_9aa97bd4",
        "filename": "meson.build",
        "patchSetId": 1
      },
      "lineNbr": 55,
      "author": {
        "id": 1000022
      },
      "writtenOn": "2020-06-02T13:16:48Z",
      "side": 1,
      "message": "Patrick, We are still using it.",
      "parentUuid": "fbbfa6e7_de944aae",
      "range": {
        "startLine": 49,
        "startChar": 0,
        "endLine": 55,
        "endChar": 5
      },
      "revId": "613c2099172997a08bd382480fd335f2a8fc73f5",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2932bf0d_2a55ac0c",
        "filename": "meson.build",
        "patchSetId": 1
      },
      "lineNbr": 55,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2020-06-02T19:40:14Z",
      "side": 1,
      "message": "Hmm.  My system has this header file already.\n\nIn any case, can we point to a newer kernel for this?  4.13 is pretty old at this point.",
      "parentUuid": "410dd699_9aa97bd4",
      "range": {
        "startLine": 49,
        "startChar": 0,
        "endLine": 55,
        "endChar": 5
      },
      "revId": "613c2099172997a08bd382480fd335f2a8fc73f5",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0c462872_485d1812",
        "filename": "meson.build",
        "patchSetId": 1
      },
      "lineNbr": 57,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2020-06-02T11:01:07Z",
      "side": 1,
      "message": "This ends up being a side-effect of sdbusplus.  Suggest moving.",
      "revId": "613c2099172997a08bd382480fd335f2a8fc73f5",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "eaf408e4_3ad2fc9c",
        "filename": "meson.build",
        "patchSetId": 1
      },
      "lineNbr": 75,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2020-06-02T11:01:07Z",
      "side": 1,
      "message": "Already covered by cppfs above, isn\u0027t it?",
      "revId": "613c2099172997a08bd382480fd335f2a8fc73f5",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f8e4d4f0_40b91fb4",
        "filename": "meson.build",
        "patchSetId": 1
      },
      "lineNbr": 77,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2020-06-02T11:01:07Z",
      "side": 1,
      "message": "Can you do this as a dependency?\n\nIt seems like dl-functions are only used by the test cases.  Can you limit the scope of this dependency?",
      "revId": "613c2099172997a08bd382480fd335f2a8fc73f5",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ddd2fcd6_90a1a6f4",
        "filename": "meson.build",
        "patchSetId": 1
      },
      "lineNbr": 77,
      "author": {
        "id": 1000022
      },
      "writtenOn": "2020-06-02T13:16:48Z",
      "side": 1,
      "message": "Yes, move it to test/meson",
      "parentUuid": "f8e4d4f0_40b91fb4",
      "revId": "613c2099172997a08bd382480fd335f2a8fc73f5",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "39644fbe_3ce45223",
        "filename": "meson.build",
        "patchSetId": 1
      },
      "lineNbr": 107,
      "author": {
        "id": 1000022
      },
      "writtenOn": "2020-06-02T13:16:48Z",
      "side": 1,
      "message": "Can we move all at line no 175 as it is being used over there??",
      "range": {
        "startLine": 100,
        "startChar": 0,
        "endLine": 107,
        "endChar": 57
      },
      "revId": "613c2099172997a08bd382480fd335f2a8fc73f5",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ebbc860f_43a94d92",
        "filename": "meson.build",
        "patchSetId": 1
      },
      "lineNbr": 129,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2020-06-02T11:01:07Z",
      "side": 1,
      "message": "Suggest sorting.",
      "revId": "613c2099172997a08bd382480fd335f2a8fc73f5",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "39938d3b_a6bccdc0",
        "filename": "meson.build",
        "patchSetId": 1
      },
      "lineNbr": 158,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2020-06-02T11:01:07Z",
      "side": 1,
      "message": "Why is this necessary?  Are we missing some flags to meson?",
      "revId": "613c2099172997a08bd382480fd335f2a8fc73f5",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1dfa8b86_c357c7ca",
        "filename": "meson.build",
        "patchSetId": 1
      },
      "lineNbr": 195,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2020-06-02T11:01:07Z",
      "side": 1,
      "message": "[] are not needed here.",
      "range": {
        "startLine": 195,
        "startChar": 14,
        "endLine": 195,
        "endChar": 26
      },
      "revId": "613c2099172997a08bd382480fd335f2a8fc73f5",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bc78e5ab_8f8f0a4d",
        "filename": "meson.build",
        "patchSetId": 1
      },
      "lineNbr": 205,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2020-06-02T11:01:07Z",
      "side": 1,
      "message": "[] are not needed on these.",
      "range": {
        "startLine": 204,
        "startChar": 0,
        "endLine": 205,
        "endChar": 25
      },
      "revId": "613c2099172997a08bd382480fd335f2a8fc73f5",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9625f63b_02f831dc",
        "filename": "meson.build",
        "patchSetId": 1
      },
      "lineNbr": 210,
      "author": {
        "id": 1000022
      },
      "writtenOn": "2020-06-02T13:16:48Z",
      "side": 1,
      "message": "Can we club all the subdir at single place??\n  Line no 95 and this one.",
      "range": {
        "startLine": 208,
        "startChar": 0,
        "endLine": 210,
        "endChar": 5
      },
      "revId": "613c2099172997a08bd382480fd335f2a8fc73f5",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d6d0ea09_8604922a",
        "filename": "network_manager_main.cpp",
        "patchSetId": 1
      },
      "lineNbr": 84,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2020-06-02T11:01:07Z",
      "side": 1,
      "message": "Why not just /*argc*/ ?  There is no requirement that these are named that way other than by convention.",
      "revId": "613c2099172997a08bd382480fd335f2a8fc73f5",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7b758371_10cf7cb5",
        "filename": "rtnetlink_server.cpp",
        "patchSetId": 1
      },
      "lineNbr": 37,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2020-06-02T11:01:07Z",
      "side": 1,
      "message": "Please update the .clang-format with the latest from docs to avoid this change.  This is a side-effect of our project-wide upgrade to clang-10 and this repository missing the .clang-format update to go with it.",
      "revId": "613c2099172997a08bd382480fd335f2a8fc73f5",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0c75c30c_56cc8424",
        "filename": "rtnetlink_server.cpp",
        "patchSetId": 1
      },
      "lineNbr": 37,
      "author": {
        "id": 1000022
      },
      "writtenOn": "2020-06-02T13:18:06Z",
      "side": 1,
      "message": "I have merged today the latest .clang-format file so we are good now.",
      "parentUuid": "7b758371_10cf7cb5",
      "revId": "613c2099172997a08bd382480fd335f2a8fc73f5",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "844e5669_ee78d829",
        "filename": "test/meson.build",
        "patchSetId": 1
      },
      "lineNbr": 14,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2020-06-02T11:01:07Z",
      "side": 1,
      "message": "please make indentation consistent",
      "range": {
        "startLine": 2,
        "startChar": 0,
        "endLine": 14,
        "endChar": 3
      },
      "revId": "613c2099172997a08bd382480fd335f2a8fc73f5",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2fa7910a_95167cfa",
        "filename": "test/meson.build",
        "patchSetId": 1
      },
      "lineNbr": 16,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2020-06-02T11:01:07Z",
      "side": 1,
      "message": "Suggest using \u0027include_directories\u0027 instead of a simple [].",
      "revId": "613c2099172997a08bd382480fd335f2a8fc73f5",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d3b3c81a_2519238f",
        "filename": "test/meson.build",
        "patchSetId": 1
      },
      "lineNbr": 19,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2020-06-02T11:01:07Z",
      "side": 1,
      "message": "So, why are they two different variables?",
      "revId": "613c2099172997a08bd382480fd335f2a8fc73f5",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "01883879_86b10ee5",
        "filename": "test/meson.build",
        "patchSetId": 1
      },
      "lineNbr": 21,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2020-06-02T11:01:07Z",
      "side": 1,
      "message": "Not necessary for a single file.",
      "range": {
        "startLine": 21,
        "startChar": 40,
        "endLine": 21,
        "endChar": 60
      },
      "revId": "613c2099172997a08bd382480fd335f2a8fc73f5",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1f2fd743_64aa6502",
        "filename": "test/meson.build",
        "patchSetId": 1
      },
      "lineNbr": 24,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2020-06-02T11:01:07Z",
      "side": 1,
      "message": "Can these be made into N tests instead of 1 large test executable?",
      "revId": "613c2099172997a08bd382480fd335f2a8fc73f5",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0370af92_863b1450",
        "filename": "test/meson.build",
        "patchSetId": 1
      },
      "lineNbr": 38,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2020-06-02T11:01:07Z",
      "side": 1,
      "message": "Why is this required?",
      "range": {
        "startLine": 38,
        "startChar": 2,
        "endLine": 38,
        "endChar": 21
      },
      "revId": "613c2099172997a08bd382480fd335f2a8fc73f5",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d45758e2_dea0e0fc",
        "filename": "xyz/openbmc_project/Network/IP/Create/meson.build",
        "patchSetId": 1
      },
      "lineNbr": 1,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2020-06-02T11:01:07Z",
      "side": 1,
      "message": "In sdbusplus, I created a tool (which is exported) called \u0027sdbus++-gendir\u0027 that automatically generates all these pieces.  I suggest looking at the \u0027example/meson.build\u0027 in that repository to understand how it is used.  This tool will let you eliminate this tree of meson.build files under xyz/...",
      "revId": "613c2099172997a08bd382480fd335f2a8fc73f5",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9c2381fa_b40dd824",
        "filename": "xyz/openbmc_project/Network/IP/Create/meson.build",
        "patchSetId": 1
      },
      "lineNbr": 1,
      "author": {
        "id": 1000206
      },
      "writtenOn": "2020-06-08T14:43:46Z",
      "side": 1,
      "message": "Patrick,\n\nI did try using the sdbus++-gendir tool today,i was able to generate all the server.cpp,hpp files in the respective directories in one shot which is awesome.\n\nBut meson refuses to compile as meson tries to compile , as it find the same name server.cpp both under IP as well as under VLAN,as all these object files are generated under the same builddirectory(without the directory structure).\n\nCode Snip:\ncustom_gen_files \u003d files(\n    run_command(\n        sdbusgen_prog,\n        \u0027--tool\u0027, sdbuspp,\n        \u0027--output\u0027, meson.current_build_dir(),\n        \u0027xyz\u0027,\n        check: true\n    ).stdout().strip().split(\u0027\\n\u0027)\n)\n\n\nThe generated files structure:\n[Juliet@juliet phosphor-networkd]$ tree builddir/xyz\nbuilddir/xyz\n└── openbmc_project\n    └── Network\n        ├── IP\n        │   ├── Create\n        │   │   ├── client.hpp\n        │   │   ├── server.cpp\n        │   │   └── server.hpp\n        │   └── Create.md\n        ├── Neighbor\n        │   ├── CreateStatic\n        │   │   ├── client.hpp\n        │   │   ├── server.cpp\n        │   │   └── server.hpp\n        │   └── CreateStatic.md\n        └── VLAN\n            ├── Create\n            │   ├── client.hpp\n            │   ├── server.cpp\n            │   └── server.hpp\n            └── Create.md\n\n\nError :\nERROR: Multiple producers for Ninja target \"libnetworkd@sta/server.cpp.o\". Please rename your targets.\n\nDo you know any better way to generate object files in the sub directories ? without using the subdir() in meson ? i one way i can think of is to rename the server.cpp to add the directory structure to it manually ?",
      "parentUuid": "d45758e2_dea0e0fc",
      "revId": "613c2099172997a08bd382480fd335f2a8fc73f5",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "298e734a_f03dd992",
        "filename": "xyz/openbmc_project/Network/IP/Create/meson.build",
        "patchSetId": 1
      },
      "lineNbr": 1,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2020-06-09T15:26:29Z",
      "side": 1,
      "message": "I don\u0027t see anything wrong with the results of the \u0027run_command\u0027 call, but I suspect something is wrong with how you\u0027re asking to have those files included into your library/executable (I\u0027ll need to see that to help debug).\n\nI\u0027ve been working on converting phosphor-dbus-interfaces to use mesonbuild and I am using the `sdbus++-gen` there.  I\u0027ve uploaded the WIP commit for you to take a look at as an example:\n\nhttps://gerrit.openbmc-project.xyz/c/openbmc/phosphor-dbus-interfaces/+/33415",
      "parentUuid": "9c2381fa_b40dd824",
      "revId": "613c2099172997a08bd382480fd335f2a8fc73f5",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "586470a2_6258209a",
        "filename": "xyz/openbmc_project/Network/IP/Create/meson.build",
        "patchSetId": 1
      },
      "lineNbr": 1,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2020-06-10T01:39:31Z",
      "side": 1,
      "message": "It turns out this was a bug with meson that was only fixed in 0.54.1.  Yocto is upgraded to 0.54.2 and I\u0027m pushing up a change to the CI scripts to update as well.  You\u0027ll want to update your minimum version above to 0.54.1, which I\u0027ve similarly done in that phosphor-dbus-interfaces commit.",
      "parentUuid": "298e734a_f03dd992",
      "revId": "613c2099172997a08bd382480fd335f2a8fc73f5",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "da6ab671_029f2a13",
        "filename": "xyz/openbmc_project/Network/meson.build",
        "patchSetId": 1
      },
      "lineNbr": 3,
      "author": {
        "id": 1000022
      },
      "writtenOn": "2020-06-02T13:16:48Z",
      "side": 1,
      "message": "Do we need this file? Can we include that at the global meson.build file?",
      "range": {
        "startLine": 1,
        "startChar": 0,
        "endLine": 3,
        "endChar": 21
      },
      "revId": "613c2099172997a08bd382480fd335f2a8fc73f5",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    }
  ]
}