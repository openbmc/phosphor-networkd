{
  "comments": [
    {
      "key": {
        "uuid": "5437b055_ec9327d8",
        "filename": "src/rtnetlink_server.cpp",
        "patchSetId": 5
      },
      "lineNbr": 62,
      "author": {
        "id": 1000188
      },
      "writtenOn": "2021-09-28T08:45:12Z",
      "side": 1,
      "message": "nit: No need to initialize the buffer.",
      "revId": "901506e0938728302e9f79176357407859a4c369",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "755dcfc3_03de5d63",
        "filename": "src/rtnetlink_server.cpp",
        "patchSetId": 5
      },
      "lineNbr": 62,
      "author": {
        "id": 1001006
      },
      "writtenOn": "2021-09-28T11:49:19Z",
      "side": 1,
      "message": "Buffer was initialized already with the previous declarations of this variable. One advantage i see is that using a debugger such as gdb or other memory tools to inspect the code to identify/isolate issue and printing the buffer at this point of time may be helpful if we initialize the buffer during the time of declaration to avoid garbage values in it. In later case if we need to implement or re-use the same code then it will be helpful i think.",
      "parentUuid": "5437b055_ec9327d8",
      "revId": "901506e0938728302e9f79176357407859a4c369",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "dab01c3e_c3debdf8",
        "filename": "src/rtnetlink_server.cpp",
        "patchSetId": 5
      },
      "lineNbr": 62,
      "author": {
        "id": 1001006
      },
      "writtenOn": "2021-09-28T12:01:04Z",
      "side": 1,
      "message": "In other places of code in network-manager code, i could see the same standard of initializing the buffer before usage is being done. Just for reference routing_table.cpp \"getRoutes\" member function does the same before receiving the data and during time of declaration too.",
      "parentUuid": "755dcfc3_03de5d63",
      "revId": "901506e0938728302e9f79176357407859a4c369",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "14745bba_d0b727a7",
        "filename": "src/rtnetlink_server.cpp",
        "patchSetId": 5
      },
      "lineNbr": 62,
      "author": {
        "id": 1001006
      },
      "writtenOn": "2021-09-28T18:52:53Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "dab01c3e_c3debdf8",
      "revId": "901506e0938728302e9f79176357407859a4c369",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c4cc3ede_a38335c4",
        "filename": "src/rtnetlink_server.cpp",
        "patchSetId": 5
      },
      "lineNbr": 62,
      "author": {
        "id": 1000188
      },
      "writtenOn": "2021-09-28T21:35:28Z",
      "side": 1,
      "message": "You could just use asan or valgrind to get the same result, and not need to add this to production code. In general if you don\u0027t need to initialize something you can avoid doing it. I\u0027ll probably go clean up all of the other instances in networkd.",
      "parentUuid": "14745bba_d0b727a7",
      "revId": "901506e0938728302e9f79176357407859a4c369",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7882de89_f04aba8c",
        "filename": "src/rtnetlink_server.cpp",
        "patchSetId": 5
      },
      "lineNbr": 91,
      "author": {
        "id": 1000188
      },
      "writtenOn": "2021-09-28T08:45:12Z",
      "side": 1,
      "message": "Same here, we just need to re-adjust the pointer. The buffer contents are irrelevant and the size is used everywhere.",
      "revId": "901506e0938728302e9f79176357407859a4c369",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6b366f85_ea7e4582",
        "filename": "src/rtnetlink_server.cpp",
        "patchSetId": 5
      },
      "lineNbr": 91,
      "author": {
        "id": 1001006
      },
      "writtenOn": "2021-09-28T11:49:19Z",
      "side": 1,
      "message": "Agree that the buffer contents are irrelevant and the same point mentioned above applies here as well.",
      "parentUuid": "7882de89_f04aba8c",
      "revId": "901506e0938728302e9f79176357407859a4c369",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c80716fa_dfd2f530",
        "filename": "src/rtnetlink_server.cpp",
        "patchSetId": 5
      },
      "lineNbr": 91,
      "author": {
        "id": 1001006
      },
      "writtenOn": "2021-09-28T18:52:53Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "6b366f85_ea7e4582",
      "revId": "901506e0938728302e9f79176357407859a4c369",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    }
  ]
}